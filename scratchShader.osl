shader scratchShader(output color resultRGB=0, output float resultA=0)
{

// generated with a seperate python script, to be made variance based
float ps[120] = {-3.2025161252581844, -0.1012580626290922, -3.2025161252581844, -4.474888061398373, -0.7374440306991863, 
-4.474888061398373, 0.26924575617443836, 0.6346228780872192, 0.26924575617443836, -4.089046400214591, -0.5445232001072955,
 -2.089046400214591, -1.515025229527331, -0.2575126147636655, -1.515025229527331, -0.34314709801045673, 1.3284264509947716,
  1.6568529019895433, -3.770552534345181, -0.38527626717259045, -3.770552534345181, 0.18311167364861003, 1.591555836824305,
   2.18311167364861, 0.06741758172695889, 0.5337087908634794, 0.06741758172695889, 1.6815245642771321, 2.340762282138566,
    1.6815245642771321, -2.264330796900701, 0.3678346015496494, -2.264330796900701, 1.65658258975904, 2.32829129487952,
     1.65658258975904, -4.187221303019185, -0.5936106515095925, -2.187221303019185, 3.469096700971493, 2.2345483504857464,
      1.4690967009714928, 3.7235252586768057, 2.361762629338403, 3.7235252586768057, -4.608788306883845, -0.8043941534419226,
       -2.608788306883845, 4.277408596794907, 2.6387042983974536, 2.277408596794907, 4.5237047168224835, 2.7618523584112418,
        4.5237047168224835, 0.9265104059559253, 1.9632552029779626, 0.9265104059559253, -2.40430603177842, 0.29784698411079, 
        -0.40430603177841995, 0.4071475854539859, 1.703573792726993, 0.4071475854539859, -1.2146314064513533, -0.10731570322567663,
         -3.2146314064513533, -4.3484739026204196, -0.6742369513102098, -4.3484739026204196, -2.131377928625268, -0.5656889643126339,
          -4.131377928625268, 0.43544760001574545, 0.7177238000078727, -1.5645523999842545, -2.2024088939003104, 0.3987955530498448,
           -2.2024088939003104, 2.213496995466458, 1.606748497733229, 0.21349699546645784, -3.4101716063996435, -0.20508580319982173, 
           -1.4101716063996435, -0.6655545381190802, 1.16722273094046, 1.3344454618809198, 3.4912918151770453, 2.2456459075885227,
            1.4912918151770453, -2.2809966765537375, -0.6404983382768688, -4.2809966765537375, 0.1635791866221723, 1.5817895933110862,
             2.1635791866221723, -1.314813922245385, -0.15740696112269248, -3.314813922245385, 3.7497324579356786, 2.3748662289678393,
              3.7497324579356786, 4.995688896207985, 2.9978444481039923, 4.995688896207985, -1.0322218402033227, 0.9838890798983386,
               -1.0322218402033227, 1.3938752499712264, 1.1969376249856132, 1.3938752499712264, -3.043221066738349, 
               -0.02161053336917451, -1.043221066738349, 3.821880204758645, 2.4109401023793224, 3.821880204758645, 1.2353074275205662,
                1.117653713760283, -0.7646925724794338};





resultRGB=color(0,0,0);
resultA=0.0;

float dist = 1;
float thickness = 0.003;

for(int c=0; c<120; c+=6)
{
    for (float i = 0;  i < 1;  i += 0.001) {
        float bezierU = (1.0 - i) * (1.0 - i) * ps[c] + 2.0 * (1.0 - i) * i * ps[c+2] + i * i * ps[c+4];
        float bezierV = (1.0 - i) * (1.0 - i) * ps[c+1] + 2.0 * (1.0 - i) * i * ps[c+3] + i * i * ps[c+5];
        float diffU = P.x - bezierU;
        float diffV = P.y - bezierV;


        // NEEDS TO BE REWRITTEN WITHOUT IF STATEMENTS 

        float newDist = hypot(diffU, diffV);

        if(newDist < dist)
        {
            dist = newDist;
        }

    }

    if (dist < thickness)
    {
        //resultRGB=color(0.93,0.93,0.83);
        resultRGB=color(0.1,0.1,0.1);
        resultA=1.0;
    }

    // if(P.x < -1)
    // {
    //     resultRGB=color(1.0, 1.0, 1.0);
    // }

}
}

